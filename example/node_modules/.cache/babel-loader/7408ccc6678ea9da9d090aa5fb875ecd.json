{"ast":null,"code":"var _jsxFileName = \"/Users/seven/project/react/art/example/src/compontents/Tabs.tsx\";\nimport resso from '../lib/resso';\nimport { useQuery } from '../lib/query.3';\nimport { memo, useEffect } from 'react';\nimport { useSubmit } from '../lib/submit';\nexport const store = resso({\n  tabsList: ['popular', 'realTime', 'month'],\n  index: 0,\n  count: 0\n});\nexport const Tabs = () => {\n  const {\n    tabsList,\n    index,\n    count\n  } = store;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Tabs\", tabsList.map((item, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: item,\n    onClick: () => store.index = i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 46\n    }\n  }, \"item\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => store.count++,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, \"\\u70B9\\u51FBcount+1 \", count), /*#__PURE__*/React.createElement(ListDiv, {\n    type: tabsList[index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }));\n};\nexport const ListDiv = memo(_ref => {\n  let {\n    type\n  } = _ref;\n  const store = useQuery('/app/live/streamer/ranking/list', {\n    /*postData: (data: LiveMode[]) => (data.map((item, index) => ({...item, no: index}))),\n    handleHttpResult: (res) => {\n    \tconst {success, errorCode, errorMessage, payload, count} = res.data || {};\n    \treturn {success, code: errorCode, message: errorMessage, data: payload, count: count || 0};\n    },*/\n    defaultBody: {\n      type: type\n    },\n    isDefaultSet: false,\n    usePage: true,\n    // method: 'get',\n    // loadingDelayMs: 3000,\n    // debounceMs: 1000,\n    // throttleMs:1000,\n    // pollingIntervalMs: 1000,\n    // refreshOnWindowFocus: true,\n    // refreshOnWindowFocusTimespanMs: 5000,\n    cache: () => [type],\n    successCallback: res => {\n      var _res$data;\n      store.data = (_res$data = res.data) !== null && _res$data !== void 0 ? _res$data : [];\n    }\n  }, [type]);\n  const submit = useSubmit('/health', {\n    manual: false,\n    handleHttpResult: res => ({\n      success: true,\n      data: res.data.status\n    })\n  });\n  const {\n    data,\n    isBusy,\n    run,\n    error\n  } = store;\n  const {\n    data: healthData\n  } = submit;\n  console.log(healthData);\n  console.log(error);\n  useEffect(() => {\n    setTimeout(() => {\n      store.cancel();\n    }, 100);\n  }, []);\n  const handleChange = event => {\n    run({\n      type: event.target.value\n    }).then();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isBusy && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }\n  }, \"loading\"), data === null || data === void 0 ? void 0 : data.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.no,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, item.no, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, item.userName))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => store.refresh(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, \"\\u70B9\\u51FB\\u5237\\u65B0\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => store.setPage({\n      current: 2\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }, \"\\u70B9\\u51FB\\u83B7\\u53D6\\u7B2C\\u4E8C\\u9875\"));\n});","map":{"version":3,"names":["resso","useQuery","memo","useEffect","useSubmit","store","tabsList","index","count","Tabs","map","item","i","ListDiv","type","defaultBody","isDefaultSet","usePage","cache","successCallback","res","data","submit","manual","handleHttpResult","success","status","isBusy","run","error","healthData","console","log","setTimeout","cancel","handleChange","event","target","value","then","no","userName","refresh","setPage","current"],"sources":["/Users/seven/project/react/art/example/src/compontents/Tabs.tsx"],"sourcesContent":["import resso from '../lib/resso';\nimport { useQuery } from '../lib/query.3';\nimport { ChangeEvent, memo, useEffect } from 'react';\nimport { useSubmit } from '../lib/submit';\n\nexport const store = resso({tabsList: ['popular', 'realTime', 'month'], index: 0, count: 0});\n\nexport const Tabs = () => {\n\n\tconst {tabsList, index, count} = store;\n\n\treturn <div>Tabs\n\t\t{tabsList.map((item: string, i: number) => <button key={item} onClick={() => store.index = i}>item</button>)}\n\t\t<button onClick={() => store.count++}>点击count+1 {count}</button>\n\t\t<ListDiv type={tabsList[index]}/>\n\t</div>;\n};\n\ntype ListDivPros = {\n\ttype: string\n}\n\ntype LiveMode = {\n\tstreamID: string,\n\tuserName: string,\n\tnickname: string,\n\tno: number,\n}\nexport const ListDiv = memo(({type}: ListDivPros) => {\n\tconst store = useQuery<LiveMode[], { type: string }>('/app/live/streamer/ranking/list', {\n\t\t/*postData: (data: LiveMode[]) => (data.map((item, index) => ({...item, no: index}))),\n\t\thandleHttpResult: (res) => {\n\t\t\tconst {success, errorCode, errorMessage, payload, count} = res.data || {};\n\t\t\treturn {success, code: errorCode, message: errorMessage, data: payload, count: count || 0};\n\t\t},*/\n\t\tdefaultBody: {type: type},\n\t\tisDefaultSet: false,\n\t\tusePage: true,\n\t\t// method: 'get',\n\t\t// loadingDelayMs: 3000,\n\t\t// debounceMs: 1000,\n\t\t// throttleMs:1000,\n\t\t// pollingIntervalMs: 1000,\n\t\t// refreshOnWindowFocus: true,\n\t\t// refreshOnWindowFocusTimespanMs: 5000,\n\t\tcache: () => [type],\n\t\tsuccessCallback: (res) => {\n\t\t\tstore.data = res.data ?? [];\n\t\t},\n\t}, [type]);\n\n\tconst submit = useSubmit<{ status: string }>('/health', {\n\t\tmanual: false,\n\t\thandleHttpResult: (res) => ({success: true, data: res.data.status}),\n\t});\n\n\tconst {data, isBusy, run, error} = store;\n\n\tconst {data: healthData} = submit;\n\n\tconsole.log(healthData);\n\n\tconsole.log(error);\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tstore.cancel();\n\t\t}, 100);\n\t}, []);\n\n\tconst handleChange = (event: ChangeEvent) => {\n\t\trun({type: event.target.value}).then();\n\t};\n\n\treturn <>\n\t\t{isBusy && <div>loading</div>}\n\t\t{data?.map((item, i) => <div key={item.no}>\n\t\t\t<span>{item.no}:</span>\n\t\t\t<span>{item.userName}</span>\n\t\t\t{/*<button onClick={() => store.setIndex(i)}>设置当前active{i}</button>*/}\n\t\t</div>)}\n\n\t\t<button onClick={() => store.refresh()}>点击刷新</button>\n\t\t<input onChange={handleChange}/>\n\n\t\t<button onClick={() => store.setPage({current: 2})}>点击获取第二页</button>\n\t</>;\n});\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAAsBC,IAAI,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,SAAS,QAAQ,eAAe;AAEzC,OAAO,MAAMC,KAAK,GAAGL,KAAK,CAAC;EAACM,QAAQ,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAC,CAAC,CAAC;AAE5F,OAAO,MAAMC,IAAI,GAAG,MAAM;EAEzB,MAAM;IAACH,QAAQ;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGH,KAAK;EAEtC,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WACLC,QAAQ,CAACI,GAAG,CAAC,CAACC,IAAY,EAAEC,CAAS,kBAAK;IAAQ,GAAG,EAAED,IAAK;IAAC,OAAO,EAAE,MAAMN,KAAK,CAACE,KAAK,GAAGK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAAc,CAAC,eAC5G;IAAQ,OAAO,EAAE,MAAMP,KAAK,CAACG,KAAK,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2BAAYA,KAAK,CAAU,eAChE,oBAAC,OAAO;IAAC,IAAI,EAAEF,QAAQ,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CAC5B;AACP,CAAC;AAYD,OAAO,MAAMM,OAAO,GAAGX,IAAI,CAAC,QAAyB;EAAA,IAAxB;IAACY;EAAiB,CAAC;EAC/C,MAAMT,KAAK,GAAGJ,QAAQ,CAA+B,iCAAiC,EAAE;IACvF;AACF;AACA;AACA;AACA;IACEc,WAAW,EAAE;MAACD,IAAI,EAAEA;IAAI,CAAC;IACzBE,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,IAAI;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,KAAK,EAAE,MAAM,CAACJ,IAAI,CAAC;IACnBK,eAAe,EAAGC,GAAG,IAAK;MAAA;MACzBf,KAAK,CAACgB,IAAI,gBAAGD,GAAG,CAACC,IAAI,iDAAI,EAAE;IAC5B;EACD,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,MAAMQ,MAAM,GAAGlB,SAAS,CAAqB,SAAS,EAAE;IACvDmB,MAAM,EAAE,KAAK;IACbC,gBAAgB,EAAGJ,GAAG,KAAM;MAACK,OAAO,EAAE,IAAI;MAAEJ,IAAI,EAAED,GAAG,CAACC,IAAI,CAACK;IAAM,CAAC;EACnE,CAAC,CAAC;EAEF,MAAM;IAACL,IAAI;IAAEM,MAAM;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGxB,KAAK;EAExC,MAAM;IAACgB,IAAI,EAAES;EAAU,CAAC,GAAGR,MAAM;EAEjCS,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EAEvBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAElB1B,SAAS,CAAC,MAAM;IACf8B,UAAU,CAAC,MAAM;MAChB5B,KAAK,CAAC6B,MAAM,EAAE;IACf,CAAC,EAAE,GAAG,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,KAAkB,IAAK;IAC5CR,GAAG,CAAC;MAACd,IAAI,EAAEsB,KAAK,CAACC,MAAM,CAACC;IAAK,CAAC,CAAC,CAACC,IAAI,EAAE;EACvC,CAAC;EAED,oBAAO,0CACLZ,MAAM,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAkB,EAC5BN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEX,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAAK;IAAK,GAAG,EAAED,IAAI,CAAC6B,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAO7B,IAAI,CAAC6B,EAAE,MAAS,eACvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAO7B,IAAI,CAAC8B,QAAQ,CAAQ,CAEvB,CAAC,eAEP;IAAQ,OAAO,EAAE,MAAMpC,KAAK,CAACqC,OAAO,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAc,eACrD;IAAO,QAAQ,EAAEP,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAEhC;IAAQ,OAAO,EAAE,MAAM9B,KAAK,CAACsC,OAAO,CAAC;MAACC,OAAO,EAAE;IAAC,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gDAAiB,CAClE;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}