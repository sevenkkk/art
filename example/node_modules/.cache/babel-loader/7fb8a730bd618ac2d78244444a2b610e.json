{"ast":null,"code":"var _jsxFileName = \"/Users/seven/project/react/art/example/src/compontents/Tabs.tsx\";\nimport React from 'react';\nimport { memo, useEffect } from 'react';\nimport resso from 'resso';\nimport { useQuery, useSubmit } from 'art';\nexport const store = resso({\n  tabsList: ['popular', 'realTime', 'month'],\n  index: 0,\n  count: 0\n});\nexport const Tabs = () => {\n  const {\n    tabsList,\n    index,\n    count\n  } = store;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, \"Tabs\", tabsList.map((item, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: item,\n    onClick: () => store.index = i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"item\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => store.count++,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"\\u70B9\\u51FBcount+1 \", count), /*#__PURE__*/React.createElement(ListDiv, {\n    type: tabsList[index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\nexport const ListDiv = memo(_ref => {\n  let {\n    type\n  } = _ref;\n  const store = useQuery('/app/live/streamer/ranking/list', {\n    /*postData: (data: LiveMode[]) => (data.map((item, index) => ({...item, no: index}))),\n    convertRes: (res) => {\n    const {success, errorCode, errorMessage, payload, count} = res.data || {};\n    return {success, code: errorCode, message: errorMessage, data: payload, count: count || 0};\n    },*/\n    defaultBody: {\n      type: type\n    },\n    // isDefaultSet: false,\n    usePage: true,\n    // method: 'get',\n    // loadingDelayMs: 3000,\n    // debounceMs: 1000,\n    // throttleMs:1000,\n    // pollingIntervalMs: 1000,\n    // refreshOnWindowFocus: true,\n    // refreshOnWindowFocusTimespanMs: 5000,\n    cache: () => [type],\n    onSuccess: () => {}\n  }, [type]);\n  const submit = useSubmit('/health', {\n    manual: false,\n    handleHttpResult: res => ({\n      success: true,\n      data: res.data.status\n    })\n  });\n  const {\n    data,\n    isBusy,\n    run,\n    error\n  } = store;\n  const {\n    data: healthData\n  } = submit;\n  console.log(healthData);\n  console.log(error);\n  useEffect(() => {\n    setTimeout(() => {\n      store.cancel();\n    }, 100);\n  }, []);\n  const handleChange = event => {\n    // @ts-ignore\n    run({\n      type: event.target.value\n    }).then();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isBusy && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }\n  }, \"loading\"), data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.no,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, item.no, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, item.userName))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => store.refresh(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"\\u70B9\\u51FB\\u5237\\u65B0\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => store.setPage({\n      current: 2\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"\\u70B9\\u51FB\\u83B7\\u53D6\\u7B2C\\u4E8C\\u9875\"));\n});","map":{"version":3,"names":["React","memo","useEffect","resso","useQuery","useSubmit","store","tabsList","index","count","Tabs","map","item","i","ListDiv","type","defaultBody","usePage","cache","onSuccess","submit","manual","handleHttpResult","res","success","data","status","isBusy","run","error","healthData","console","log","setTimeout","cancel","handleChange","event","target","value","then","no","userName","refresh","setPage","current"],"sources":["/Users/seven/project/react/art/example/src/compontents/Tabs.tsx"],"sourcesContent":["import React from 'react'\nimport { ChangeEvent, memo, useEffect } from 'react'\nimport resso from 'resso'\nimport { useQuery, useSubmit } from 'art'\n\nexport const store = resso({\n  tabsList: ['popular', 'realTime', 'month'],\n  index: 0,\n  count: 0\n})\n\nexport const Tabs = () => {\n  const { tabsList, index, count } = store\n\n  return (\n    <div>\n      Tabs\n      {tabsList.map((item: string, i: number) => (\n        <button key={item} onClick={() => (store.index = i)}>\n          item\n        </button>\n      ))}\n      <button onClick={() => store.count++}>点击count+1 {count}</button>\n      <ListDiv type={tabsList[index]} />\n    </div>\n  )\n}\n\ntype ListDivPros = {\n  type: string\n}\n\ntype LiveMode = {\n  streamID: string\n  userName: string\n  nickname: string\n  no: number\n}\nexport const ListDiv = memo(({ type }: ListDivPros) => {\n  const store = useQuery<LiveMode[], { type: string }>(\n    '/app/live/streamer/ranking/list',\n    {\n      /*postData: (data: LiveMode[]) => (data.map((item, index) => ({...item, no: index}))),\n\t\tconvertRes: (res) => {\n\t\t\tconst {success, errorCode, errorMessage, payload, count} = res.data || {};\n\t\t\treturn {success, code: errorCode, message: errorMessage, data: payload, count: count || 0};\n\t\t},*/\n      defaultBody: { type: type },\n      // isDefaultSet: false,\n      usePage: true,\n      // method: 'get',\n      // loadingDelayMs: 3000,\n      // debounceMs: 1000,\n      // throttleMs:1000,\n      // pollingIntervalMs: 1000,\n      // refreshOnWindowFocus: true,\n      // refreshOnWindowFocusTimespanMs: 5000,\n      cache: () => [type],\n      onSuccess: () => {}\n    },\n    [type]\n  )\n\n  const submit = useSubmit<{ status: string }>('/health', {\n    manual: false,\n    handleHttpResult: (res) => ({ success: true, data: res.data.status })\n  })\n\n  const { data, isBusy, run, error } = store\n\n  const { data: healthData } = submit\n\n  console.log(healthData)\n\n  console.log(error)\n\n  useEffect(() => {\n    setTimeout(() => {\n      store.cancel()\n    }, 100)\n  }, [])\n\n  const handleChange = (event: ChangeEvent) => {\n    // @ts-ignore\n    run({ type: event.target.value }).then()\n  }\n\n  return (\n    <>\n      {isBusy && <div>loading</div>}\n      {data?.map((item) => (\n        <div key={item.no}>\n          <span>{item.no}:</span>\n          <span>{item.userName}</span>\n          {/*<button onClick={() => store.setIndex(i)}>设置当前active{i}</button>*/}\n        </div>\n      ))}\n\n      <button onClick={() => store.refresh()}>点击刷新</button>\n      <input onChange={handleChange} />\n\n      <button onClick={() => store.setPage({ current: 2 })}>\n        点击获取第二页\n      </button>\n    </>\n  )\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}